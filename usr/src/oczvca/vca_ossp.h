/*
 * Copyright 2014 by OCZ Storage Solutions.  All rights reserved.  All
 * information contained herein is proprietary and confidential to OCZ Storage Solutions.
 * Any use, reproduction, or disclosure without the written
 * permission of OCZ Storage Solutions is prohibited.
 */

void oczpcie_vca_ossp_printk(const char *const fmt, ...);
int oczpcie_vca_ossp_snprintf(char *str, size_t size, const char *fmt, ...);
void oczpcie_vca_ossp_spin_lock_init(spinlock_t *lock);
void *oczpcie_vca_ossp_kmalloc(size_t size, gfp_t flags);
void oczpcie_vca_ossp_kfree(const void *objp);
mempool_t *oczpcie_vca_ossp_mempool_create_kmalloc_pool(int min_nr, size_t size);
void *oczpcie_vca_ossp_mempool_alloc(mempool_t *pool, gfp_t gfp_mask);
void oczpcie_vca_ossp_mempool_destroy(mempool_t *pool);
void oczpcie_vca_ossp_mempool_free(void *element, mempool_t *pool);
struct page *oczpcie_vca_ossp_alloc_page(gfp_t gfp_mask);
void oczpcie_vca_ossp_free_page(struct page *page);
void *oczpcie_vca_ossp_get_page_address(struct page *page);
void oczpcie_vca_ossp_memcpy(char *dest, char *src, int len);
int oczpcie_vca_ossp_copy_from_user(void *to, void *from, int len);
int oczpcie_vca_ossp_copy_to_user(void *to, void *from, int len);
unsigned short oczpcie_vca_ossp_bio_segment_sub_length(struct bio *bio_src, unsigned int *resid, unsigned short start, int allow_equal);
struct bio *oczpcie_vca_ossp_bio_alloc(int alloc_flags, unsigned int nr_iovecs);
struct block_device *oczpcie_vca_ossp_bio_get_bdev(struct bio *bio);
void oczpcie_vca_ossp_bio_set_bdev(struct bio *bio, struct block_device *bdev);
unsigned long oczpcie_vca_ossp_bio_get_rw(struct bio *bio);
void oczpcie_vca_ossp_bio_set_rw(struct bio *bio, unsigned long rw);
void oczpcie_vca_ossp_bio_set_flags(struct bio *bio, int flags);
sector_t oczpcie_vca_ossp_bio_get_sector(struct bio *bio);
void oczpcie_vca_ossp_bio_set_sector(struct bio *bio, sector_t sector);
void oczpcie_vca_ossp_bio_add_sector(struct bio *bio, sector_t sector);
void oczpcie_vca_ossp_bio_mark_as_cloned(struct bio *bio);
void oczpcie_vca_ossp_bio_set_vcnt(struct bio *bio, unsigned short vcnt);
void oczpcie_vca_ossp_bio_set_size(struct bio *bio, unsigned int size);
void oczpcie_vca_ossp_bio_add_size(struct bio *bio, unsigned int size);
void oczpcie_vca_ossp_bio_sub_size(struct bio *bio, unsigned int size);
void oczpcie_vca_ossp_bio_set_idx(struct bio *bio, unsigned short idx);
void oczpcie_vca_ossp_bio_set_next(struct bio *bio, struct bio *next);
struct bio *oczpcie_vca_ossp_bio_get_next(struct bio *bio);
void *oczpcie_vca_ossp_bio_vec_address(struct bio *bio, int index);
int oczpcie_vca_ossp_get_bio_vec_structure_size(void);
struct dm_bio_vec_details *oczpcie_vca_ossp_get_bio_vec(struct bio *bio, int index);
void oczpcie_vca_ossp_set_bio_vec(struct bio *bio, int index, struct dm_bio_vec_details *v);
void oczpcie_vca_ossp_bio_set_vec_inc_offset(struct bio *bio, int index, int offset);
void oczpcie_vca_ossp_bio_set_vec_dec_len(struct bio *bio, int index, int len);
void oczpcie_vca_ossp_bio_set_vec_set_len(struct bio *bio, int index, int len);
int oczpcie_vca_ossp_bio_get_size(struct bio *bio);
void oczpcie_vca_ossp_bio_set_private(struct bio *bio, void *private);
void *oczpcie_vca_ossp_bio_get_private(struct bio *bio);
void oczpcie_vca_ossp_bio_set_end_io(struct bio *bio, void (*func)(struct bio *bio, int error));
int oczpcie_vca_ossp_bio_is_valid_dir(struct bio *bio);
int oczpcie_vca_ossp_bio_is_discard(struct bio *bio);
void oczpcie_vca_ossp_bio_put(struct bio *bio);
void oczpcie_vca_ossp_bio_endio(struct bio *bio, int err);
struct bio *oczpcie_vca_ossp_bio_clone(struct bio *bio, gfp_t gfp_mask);
struct request_queue *oczpcie_vca_ossp_blk_alloc_queue(gfp_t gfp_mask);
void *oczpcie_vca_ossp_queue_get_queuedata(struct request_queue *q);
void *oczpcie_vca_ossp_queue_get_queue(struct request_queue *q);
void oczpcie_vca_ossp_queue_set_queuedata(struct request_queue *q, void *data);
void *oczpcie_vca_ossp_bdev_get_queue(struct block_device *bdev);
void *oczpcie_vca_ossp_bdev_get_queuedata(struct block_device *bdev);
int oczpcie_vca_ossp_call_ioctl(struct block_device *bdev, unsigned cmd, unsigned long arg);
void oczpcie_vca_ossp_atomic_set(atomic_t *t, int v);
void oczpcie_vca_ossp_atomic_inc(atomic_t *t);
int oczpcie_vca_ossp_atomic_dec_and_test(atomic_t *t);
int oczpcie_vca_ossp_down_interruptible(struct semaphore *sem);
void oczpcie_vca_ossp_set_geo_cylinders(struct hd_geometry * geo, sector_t cylinders);
void oczpcie_vca_ossp_blk_queue_make_request(struct request_queue *q, make_request_fn *fn);
void oczpcie_vca_ossp_blk_set_params(struct request_queue *q, int max_hw_sectors, int max_discard_sectors, int discard_zeros_data);
int oczpcie_vca_ossp_discard_zeros_data(struct request_queue *q);
void oczpcie_vca_ossp_gendisk_set_params(struct gendisk *gd, int major, int first_minor, int minors, struct request_queue *q, struct block_device_operations *fops);
void oczpcie_vca_ossp_gendisk_set_capacity(struct gendisk *gd, sector_t capacity);
struct gendisk *oczpcie_vca_ossp_get_gendisk_from_block(struct block_device *bd);
sector_t oczpcie_vca_ossp_gendisk_get_capacity(struct gendisk *gd);
int oczpcie_vca_ossp_register_blkdev(unsigned int major, const char *name);
void oczpcie_vca_ossp_unregister_blkdev(unsigned int major, const char *name);
void oczpcie_vca_ossp_blk_cleanup_queue(struct request_queue *q);
struct gendisk *oczpcie_vca_ossp_alloc_disk(int minors);
void oczpcie_vca_ossp_del_gendisk(struct gendisk *disk);
void oczpcie_vca_ossp_put_disk(struct gendisk *disk);
void oczpcie_vca_ossp_add_disk(struct gendisk *disk);
struct request_queue *oczpcie_vca_ossp_disk_get_queue(struct gendisk *disk);
void oczpcie_vca_ossp_msleep(int time);
void oczpcie_vca_ossp_kref_init(void *kref);
void oczpcie_vca_ossp_kref_get(void *kref);
void oczpcie_vca_ossp_kref_put(void *kref, void (*release)(struct kref *kref));
int oczpcie_vca_ossp_call_usermode(char *path, char **argv, char **envp);
struct module *oczpcie_vca_ossp_this_module(void);
int oczpcie_vca_ossp_do_div(u64 *n, int base);
void oczpcie_vca_ossp_start_io_acct(spinlock_t *lock, struct bio *bio);
void oczpcie_vca_ossp_end_io_acct(spinlock_t *lock, struct bio *bio, unsigned long start_time);
unsigned long oczpcie_vca_ossp_get_jiffies(void);
void oczpcie_vca_ossp_list_add_tail(struct list_head *new, struct list_head *head);
void oczpcie_vca_ossp_list_del(struct list_head *entry);
